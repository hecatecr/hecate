# Task ID: 19
# Title: Write Documentation and Examples
# Status: pending
# Dependencies: 17
# Priority: medium
# Description: Create comprehensive documentation with API references and example language implementations
# Details:
Documentation structure:

1. Main README.md:
   - Project overview and vision
   - Quick start guide
   - Installation instructions
   - Links to shard documentation

2. shards/hecate-core/README.md:
   - Core concepts (spans, positions, diagnostics)
   - API reference with examples
   - Integration guide for renderer customization

3. shards/hecate-lex/README.md:
   - DSL syntax reference
   - Common patterns and idioms
   - Error handling strategies
   - Performance tips

4. Create examples/:
   - examples/json_lexer.cr (simple JSON lexer)
   - examples/math_lexer.cr (expression lexer)
   - examples/custom_renderer.cr (custom diagnostic rendering)

5. Generate Crystal docs:
   ```bash
   crystal docs --project-name="Hecate" --project-version="0.1.0"
   ```

# Test Strategy:
Verify all examples compile and run, test documentation code snippets, ensure crystal docs generates without warnings

# Subtasks:
## 1. Create Main Project Documentation [pending]
### Dependencies: None
### Description: Write the main README.md with project overview, vision, quick start guide, and installation instructions
### Details:
Create a comprehensive main README.md file that includes: 1) Project overview explaining Hecate as a language development toolkit for Crystal, 2) Clear vision statement about building programming languages and DSLs, 3) Quick start guide showing basic usage of lexer DSL, 4) Installation instructions for adding Hecate shards to a project, 5) Links to individual shard documentation, 6) Brief architecture overview of the monorepo structure

## 2. Document hecate-core Shard [pending]
### Dependencies: None
### Description: Create comprehensive documentation for hecate-core including core concepts, API reference, and integration guides
### Details:
Write shards/hecate-core/README.md covering: 1) Core concepts documentation for spans, positions, and the diagnostic system, 2) Complete API reference with code examples for Diagnostic, Span, Position, SourceMap, and Renderer classes, 3) Integration guide showing how to customize diagnostic rendering, 4) Examples of creating multi-span diagnostics with labels and help messages, 5) Guide on thread-safe usage of SourceMap for multiple files

## 3. Document hecate-lex Shard [pending]
### Dependencies: None
### Description: Write documentation for hecate-lex covering DSL syntax, patterns, error handling, and performance optimization
### Details:
Create shards/hecate-lex/README.md including: 1) Complete DSL syntax reference with all available options (skip, push_mode, pop_mode, etc.), 2) Common lexing patterns and idioms (string literals, comments, nested structures), 3) Error handling strategies with diagnostic integration examples, 4) Performance tips for DFA compilation and token matching, 5) Mode-based lexing examples for context-sensitive tokens, 6) Integration with hecate-core diagnostics

## 4. Create Example Implementations [pending]
### Dependencies: 19.2, 19.3
### Description: Build example lexers demonstrating Hecate capabilities including JSON lexer, math expression lexer, and custom renderer
### Details:
Implement three example files: 1) examples/json_lexer.cr - Complete JSON lexer with string escaping, number parsing, and error recovery, 2) examples/math_lexer.cr - Expression lexer supporting operators, precedence, parentheses, and variables, 3) examples/custom_renderer.cr - Custom diagnostic renderer with colored output and source context display. Each example should include inline comments explaining design decisions and demonstrating best practices

## 5. Generate and Publish Crystal Docs [pending]
### Dependencies: 19.1, 19.2, 19.3, 19.4
### Description: Generate Crystal API documentation and set up documentation publishing workflow
### Details:
Execute crystal docs command with proper project metadata: crystal docs --project-name='Hecate' --project-version='0.1.0'. Ensure all public APIs have proper doc comments. Set up GitHub Pages workflow to automatically publish docs on releases. Create docs/index.html redirect to Crystal docs. Add documentation badge to main README. Verify no warnings during doc generation

